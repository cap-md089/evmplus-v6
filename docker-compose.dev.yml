version: '3.8'
services:
    main:
        build:
            context: .
            target: development
        # Expose random ports to access the server directly and to debug
        ports:
            - '3001:3001'
            - '5858:5858'
        # Consistently expose the 3001 port to the Docker network
        # for the Webpack dev server
        expose:
            - '3001'
        environment:
            - DB_SCHEMA=EventManagementv6
            - DB_HOST=mysql
            - DB_PORT=33060
            - DB_POOL_SIZE=5
            - PORT=3001
            - DRIVE_STORAGE_PATH=/srv/uploads
            - HOST_NAME=localevmplus.org
            - NODE_ENV=development
            - GOOGLE_KEYS_PATH=/google-keys
        volumes:
            - type: bind
              source: ./keys/google-keys
              target: /google-keys

            - type: bind
              source: .
              target: /usr/evm-plus

            - uploads:/srv/uploads
        secrets:
            - db_user
            - db_password
            - discord_client_token
            - aws_access_key_id
            - aws_secret_access_key
            - recaptcha_secret
        depends_on:
            - mysql
        networks:
            - default

    client_dev_server:
        build:
            context: .
            target: client-development
        ports:
            - '3000:3000'
        environment:
            - PROXY=main
            - BROWSER=none
        networks:
            - default
        depends_on:
            - main
        volumes:
            - type: bind
              source: .
              target: /usr/evm-plus

    mysql:
        image: mysql:8.0.19
        ports:
            - '3306:3306'
            - '33060:33060'
        command: mysqld --local-infile=ON
        expose:
            - '33060'
        environment:
            - MYSQL_DATABASE=EventManagementv6
            - MYSQL_USER_FILE=/run/secrets/db_user
            - MYSQL_PASSWORD_FILE=/run/secrets/db_password
            - MYSQL_ROOT_PASSWORD=toor
        volumes:
            - type: bind
              source: ./mysql-init
              target: /docker-entrypoint-initdb.d

            - db-data:/var/lib/mysql
        secrets:
            - db_user
            - db_password
        networks:
            - default

    dev-setup:
        build:
            context: .
            target: development-builder
        volumes:
            - .:/usr/evm-plus
        working_dir: /usr/evm-plus
        depends_on:
            - mysql
        environment:
            - DB_SCHEMA=EventManagementv6
            - DB_HOST=mysql
            - DB_PORT=33060
            - DB_POOL_SIZE=5
            - CLIENT_PATH=/usr/evm-plus/packages/client
            - DRIVE_STORAGE_PATH=/srv/uploads
            - GOOGLE_KEYS_PATH=/google-keys
            - PORT=3001
            - HOST_NAME=localevmplus.org
            - NODE_ENV=development
        command: /usr/evm-plus/scripts/dev-setup.sh

    full-build:
        build:
            context: .
            target: development-builder
        volumes:
            - .:/usr/evm-plus
        command: lerna run build --ignore client

    build-watch:
        build:
            context: .
            target: development-builder
        volumes:
            - .:/usr/evm-plus
        command: sh -c 'ttsc --build /usr/evm-plus/tsconfig.dev.json --watch'

    capwatch_update:
        build:
            context: .
            target: development
        command: /usr/evm-plus/cronjobs/download.sh
        volumes:
            - ./capwatch_downloads:/tmp
            - .:/usr/evm-plus
        environment:
            - DB_SCHEMA=EventManagementv6
            - DB_HOST=mysql
            - DB_PORT=33060
            - DB_POOL_SIZE=50
            - DRIVE_STORAGE_PATH=/srv/uploads
            - GOOGLE_KEYS_PATH=/google-keys
            - HOST_NAME=localevmplus.org
        secrets:
            - db_user
            - db_password
            - discord_client_token
            - capwatch_password
            - capwatch_orgid
            - capwatch_capid
        depends_on:
            - mysql
        networks:
            - default

    mysqlsh:
        build:
            context: .
            dockerfile: ./Dockerfile.mysqlsh
        environment:
            - DB_SCHEMA=EventManagementv6
            - DB_HOST=mysql
        tty: true
        stdin_open: true
        depends_on:
            - mysql
        networks:
            - default
        volumes:
            - /srv/backups/mysqldumps:/srv/backups/mysqldumps

    util-cli:
        build:
            context: .
            target: development
        command: sh
        working_dir: /usr/evm-plus/packages/util-cli/dist
        environment:
            - DB_SCHEMA=EventManagementv6
            - DB_HOST=mysql
            - DB_PORT=33060
            - DB_POOL_SIZE=5
            - CLIENT_PATH=/usr/evm-plus/packages/client
            - DRIVE_STORAGE_PATH=/srv/uploads
            - GOOGLE_KEYS_PATH=/google-keys
            - PORT=3001
            - HOST_NAME=localevmplus.org
            - NODE_ENV=development
        volumes:
            - type: bind
              source: ./keys/google-keys
              target: /google-keys

            - type: bind
              source: .
              target: /usr/evm-plus

            - ./capwatch_downloads:/srv/downloads

            - uploads:/srv/uploads
        tty: true
        stdin_open: true
        depends_on:
            - mysql
        networks:
            - default
        secrets:
            - db_user
            - db_password
            - discord_client_token
            - aws_access_key_id
            - aws_secret_access_key
            - recaptcha_secret

networks:
    default:
        driver: bridge

secrets:
    db_user:
        file: ./keys/db_user

    db_password:
        file: ./keys/db_password

    discord_client_token:
        file: ./keys/discord_client_token

    aws_access_key_id:
        file: ./keys/aws_access_key_id

    aws_secret_access_key:
        file: ./keys/aws_secret_access_key

    recaptcha_secret:
        file: ./keys/recaptcha_secret

    capwatch_orgid:
        file: ./keys/capwatch_orgid

    capwatch_capid:
        file: ./keys/capwatch_capid

    capwatch_password:
        file: ./keys/capwatch_password

    mysql_root_password:
        file: ./keys/mysql_root_password

volumes:
    db-data:
        driver: local

    uploads:
        driver: local
